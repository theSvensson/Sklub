@model IEnumerable<Sklub.Models.Member>

@{
    ViewBag.Title = "Index";
    var sectionList = ViewData["sectionList"] as List<Sklub.Models.Section>;
}

<h2 class="mt-3">Alle Mitglieder</h2>
<hr />

<a href="" class="btn btn-primary toggle-vis" data-column="0">Vorname</a>
<a href="" class="btn btn-primary toggle-vis" data-column="1">Nachname</a>
<a href="" class="btn btn-secondary toggle-vis" data-column="2">Strasse</a>
<a href="" class="btn btn-secondary toggle-vis" data-column="3">PLZ</a>
<a href="" class="btn btn-secondary toggle-vis" data-column="4">Ort</a>
<a href="" class="btn btn-primary toggle-vis" data-column="5">Geschlecht</a>
<a href="" class="btn btn-primary toggle-vis" data-column="6">E-Mail</a>
<a href="" class="btn btn-primary toggle-vis" data-column="7">Riegen</a>
<a href="" class="btn btn-secondary toggle-vis" data-column="8">STV</a>
<a href="" class="btn btn-secondary toggle-vis" data-column="9">Geburtstag</a>


<table class="table table-striped table-responsive" id="MemberList">
    <thead>
        <tr>
            <th>Vorname</th>
            <th>Nachname</th>
            <th>Strasse</th>
            <th>PLZ</th>
            <th>Ort</th>
            <th>Geschlecht</th>
            <th>E-Mail</th>
            <th>Riegen</th>
            <th>STV</th>
            <th>Geburtstag</th>
            <th>Aktion</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.FirstName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.LastName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.StreetInfo)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.PostalCode)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.City)
            </td>
            <td>
                @if (!item.IsMale)
                {
                    <text><i class="fas fa-venus" style="color:hotpink"></i></text>
                }
                else
                {
                    <text><i class="fas fa-mars" style="color:dodgerblue"></i></text>
                }
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Email)
            </td>
            <td>
                @foreach (var s in item.Sections)
                {
                    <span class="badge badge-success" data-toggle="tooltip" data-placement="top" title="@s.Name" style="background-color:@s.Color">@s.Tag</span>
                }
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.ClubNo)
            </td>
            <td>
                @item.Birthdate.ToShortDateString()
            </td>
            <td>
                <a href="@Url.Action("Edit",new { id = item.ID})"><i class="fas fa-edit"></i></a>
                <a href="@Url.Action("Details",new { id = item.ID})"><i class="fas fa-user"></i></a>
                <a href="@Url.Action("Delete",new { id = item.ID})"><i class="fas fa-trash"></i></a>
            </td>
        </tr>
        }
    </tbody>
</table>
<script type="text/javascript">
    $(document).ready(function () {
        var table = $('#MemberList').DataTable({
            "order": [[1, "asc"]],
            language: {
                "sEmptyTable": "Keine Daten in der Tabelle vorhanden",
                "sInfo": "_START_ bis _END_ von _TOTAL_ Einträgen",
                "sInfoEmpty": "Keine Daten vorhanden",
                "sInfoFiltered": "(gefiltert von _MAX_ Einträgen)",
                "sInfoPostFix": "",
                "sInfoThousands": ".",
                "sLengthMenu": "_MENU_ Einträge anzeigen",
                "sLoadingRecords": "Wird geladen ..",
                "sProcessing": "Bitte warten ..",
                "sSearch": "Suchen",
                "sZeroRecords": "Keine Einträge vorhanden",
                "oPaginate": {
                    "sFirst": "Erste",
                    "sPrevious": "Zurück",
                    "sNext": "Nächste",
                    "sLast": "Letzte"
                },
                "oAria": {
                    "sSortAscending": ": aktivieren, um Spalte aufsteigend zu sortieren",
                    "sSortDescending": ": aktivieren, um Spalte absteigend zu sortieren"
                },
                "select": {
                    "rows": {
                        "_": "%d Zeilen ausgewählt",
                        "0": "",
                        "1": "1 Zeile ausgewählt"
                    }
                },
                "buttons": {
                    "print": "Drucken",
                    "colvis": "Spalten",
                    "copy": "Kopieren",
                    "copyTitle": "In Zwischenablage kopieren",
                    "copyKeys": "Taste <i>ctrl</i> oder <i>\u2318</i> + <i>C</i> um Tabelle<br>in Zwischenspeicher zu kopieren.<br><br>Um abzubrechen die Nachricht anklicken oder Escape drücken.",
                    "copySuccess": {
                        "_": "%d Spalten kopiert",
                        "1": "1 Spalte kopiert"
                    }
                }
            },
            "columnDefs": [
                {
                    "targets": [2],
                    "visible": false,
                },
                {
                    "targets": [3],
                    "visible": false
                },
                {
                    "targets": [4],
                    "visible": false
                },
                {
                    "targets": [7]
                },
                {
                    "targets": [8],
                    "visible": false
                },
                {
                    "targets": [9],
                    "visible": false
                },
                {
                    "targets": [10],
                    "ordering": false
                }
            ]           
        });

        $('#sections').on("click", function () {
            var search = [];

            $.each($('#sections option:selected'), function () {
                console.log($(this).val());
                search.push($(this).val());
            });

            search = search.join('|');
            table.column(2).search(search, true, false).draw();
        });

        $('a.toggle-vis').on('click', function (e) {
            e.preventDefault();

            // Get the column API object
            var column = table.column($(this).attr('data-column'));

            if ($(this).hasClass('btn-primary')) {
                $(this).removeClass('btn-primary');
                $(this).addClass('btn-secondary');
            } else {
                $(this).addClass('btn-primary');
                $(this).removeClass('btn-secondary');
            }

            // Toggle the visibility
            column.visible(!column.visible());
        });
    });

    var tags = $("#sections").serializeArray()




</script>